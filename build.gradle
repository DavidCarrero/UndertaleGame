buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    gradlePluginPortal()
    mavenLocal()
    google()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {
    // Añade aquí tus dependencias de buildscript si las tienes
  }
}

plugins {
  id "org.sonarqube" version "5.0.0.4638"
}


allprojects {
  apply plugin: 'eclipse'
  apply plugin: 'idea'

  // Esto permite "Build and run using IntelliJ IDEA", una opción en la configuración de IDEA.
  idea {
    module {
      outputDir file('build/classes/java/main')
      testOutputDir file('build/classes/java/test')
    }
  }
}

configure(subprojects) {
  apply plugin: 'java-library'
  sourceCompatibility = 21
  compileJava {
    options.incremental = true
  }

  compileJava.doLast {
    def assetsFolder = new File("${project.rootDir}/assets/")
    def assetsFile = new File(assetsFolder, "assets.txt")
    assetsFile.delete()

    fileTree(assetsFolder).collect { assetsFolder.relativePath(it) }.each {
      assetsFile.append(it + "\n")
    }
  }

  java {
    toolchain {
      languageVersion = JavaLanguageVersion.of(21)
    }
  }
}

subprojects {
  version = '1.0.0'
  ext.appName = 'Game'
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    mavenLocal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
  }
}

sonar {
  properties {
    property "sonar.projectKey", "GovernmentAgency"
    property "sonar.projectName", "GovernmentAgency"
  }
}

eclipse.project.name = 'Game' + '-parent'
